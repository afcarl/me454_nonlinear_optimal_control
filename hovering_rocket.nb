(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    307943,       5975]
NotebookOptionsPosition[    306555,       5925]
NotebookOutlinePosition[    306918,       5941]
CellTagsIndexPosition[    306875,       5938]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Project : Space Craft / Rocket Hovering", "Section",
 CellChangeTimes->{{3.610983370820457*^9, 3.6109833877516212`*^9}, {
  3.610996894283512*^9, 3.610996899536216*^9}}],

Cell["\<\
This is 454 final project written by Titipat Achakulvisut.
- We simulate the rocket hovering over x-axis while maintaining y-axis and it\
\[CloseCurlyQuote]s direction \[Theta](t)

The program contains 2 parts:
1. Optimization Algorithm (takes up to 10-15 minutes to run until the it end \
of the optimization)
- Note that I use appropriate constant step size in optimization loop before \
using Armijo to obtain fine result of signal
- We can abort the optimization if it seems to converge at the end (e.g. you \
can observe that it converges around iteration = 18)
- I let the simulation stop at iteration 18 which gives pretty decent result.

2. Animation Part (takes 1-2 seconds to run)
- Do animation of the hovering rocket\
\>", "Text",
 CellChangeTimes->{{3.611326424212146*^9, 3.6113264949768887`*^9}, {
  3.6113507888893623`*^9, 3.611350934574977*^9}, {3.611367044091675*^9, 
  3.611367091647242*^9}, {3.61136901237364*^9, 3.611369023936796*^9}, {
  3.611369407539116*^9, 3.611369448479817*^9}, {3.611520590799437*^9, 
  3.611520613219439*^9}, {3.611591296702066*^9, 3.6115913586314793`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optimization Part", "Section",
 CellChangeTimes->{{3.611355659414768*^9, 3.6113556647817574`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.610983389403572*^9, 3.6109833911123257`*^9}, {
  3.611007982037463*^9, 3.611007982674242*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"NIntegrate", "::", "\"\<slwcon\>\""}], "]"}], ";", 
   RowBox[{"Off", "[", 
    RowBox[{"NIntegrate", "::", "\"\<ncvb\>\""}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"NUMBER", " ", "OF", " ", "STATE"}], ",", " ", "INITCON"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NS", " ", "=", " ", "6"}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"#", " ", "of", " ", "states"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x0", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{
       RowBox[{"-", "Pi"}], "/", "10"}], ",", "0", ",", "0", ",", "0"}], 
     "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Initial", " ", "condition"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T", " ", "=", " ", "25"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Final", " ", "time"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xlen", " ", "=", " ", 
    RowBox[{"Length", "[", "x0", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "states"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ulen", " ", "=", " ", "2"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "control", " ", "signal"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Armijo", " ", "Parameter"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", " ", "=", " ", "0.35"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", " ", "=", " ", "\[Beta]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"just", " ", "assign", " ", "it", " ", "first"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iter", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxiter", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"WEIGHT", " ", "MATRIX", " ", "OF", " ", "COST"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Weight", " ", "Constant", " ", "for", " ", "P", " ", "Matrix"}], 
    ",", " ", 
    RowBox[{"original", " ", "cost"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", " ", "=", " ", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{"100", ",", "30", ",", "30", ",", "1", ",", "1", ",", "1"}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", " ", "=", " ", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.1"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P1", " ", "=", " ", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"100", ",", "30", ",", "30", ",", "1", ",", "1", ",", "1"}], 
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Weight", " ", "Constant", " ", "for", " ", "Descent", " ", "Direction"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qn", " ", "=", 
   RowBox[{"IdentityMatrix", "[", "xlen", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rn", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "ulen", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P1n", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "xlen", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Weight", " ", "for", " ", "K", 
    RowBox[{"(", "t", ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qr", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "xlen", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rr", " ", "=", "  ", 
   RowBox[{"IdentityMatrix", "[", "ulen", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P1r", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "xlen", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Desire", " ", "Trajectory"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"xd", "[", "t_", "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"t", "<", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "*", 
            RowBox[{"(", 
             RowBox[{"t", "-", "1"}], ")"}]}], ",", 
           RowBox[{"1", "\[LessEqual]", "t", "<", "10"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"9", ",", 
           RowBox[{"5", "\[LessEqual]", "t", "<", "T"}]}], "}"}]}], "}"}], 
       ",", "0"}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"yd", "[", "t_", "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.5", ",", 
           RowBox[{"t", "<", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.5"}], "*", 
             RowBox[{"(", 
              RowBox[{"t", "-", "1"}], ")"}]}], "+", "2.5"}], ",", 
           RowBox[{"1", "\[LessEqual]", "t", "<", "6"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"6", "\[LessEqual]", "t", "<", "T"}]}], "}"}]}], "}"}], 
       ",", "0"}], "]"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xd", "[", "t_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"t", "<", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"5", "\[LessEqual]", "t", "<", 
          RowBox[{"T", "/", "2"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"20", "\[LessEqual]", "t", "<", "T"}]}], "}"}]}], "}"}], ",",
      "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yd", "[", "t_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"t", "<", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"5", "\[LessEqual]", "t", "<", 
          RowBox[{"T", "/", "2"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"20", "\[LessEqual]", "t", "<", "T"}]}], "}"}]}], "}"}], ",",
      "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]d", "[", "t_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"t", "<", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"1", "\[LessEqual]", "t", "<", "5"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"5", "\[LessEqual]", "t", "<", "T"}]}], "}"}]}], "}"}], ",",
       "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"No", " ", "desired", " ", "trajectory", " ", "in", " ", "state"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Xd", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xd", "[", "t", "]"}], ",", 
      RowBox[{"yd", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]d", "[", "t", "]"}], ",", "0", ",", "0", ",", "0"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{"STATES", " ", "AND", " ", "CONTROLS"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"define", " ", "state", " ", "as", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], "}"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "i", "]"}], "[", "t", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "[", "i", "]"}], "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "ulen"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"DYNAMICS", " ", "and", " ", "its", " ", "CONSTANT"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", "11.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gr", " ", "=", " ", "0.28"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jm", " ", "=", " ", "0.0462"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ra", " ", "=", " ", "0.156"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", " ", "=", " ", "1.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", " ", "=", " ", "0.61"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dr", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], "*", "\[Rho]", "*", "S", "*", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{
        RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "2"]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "6", "]"}], "[", "t", "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "M"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "M"}], "*", "gr", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "]"}]}], "-", 
          RowBox[{"d", "*", 
           RowBox[{
            RowBox[{"x", "[", "4", "]"}], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "[", "1", "]"}], "[", "t", "]"}], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "[", "2", "]"}], "[", "t", "]"}], "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "]"}]}]}], " ", 
         ")"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "M"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"M", "*", "gr", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "]"}], "-", 
             "1"}], ")"}]}], "-", 
          RowBox[{"d", "*", 
           RowBox[{
            RowBox[{"x", "[", "5", "]"}], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "[", "1", "]"}], "[", "t", "]"}], "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "[", "2", "]"}], "[", "t", "]"}], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "t", "]"}], "]"}]}]}], 
         ")"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ra", "/", "Jm"}], ")"}], "*", 
        RowBox[{
         RowBox[{"u", "[", "1", "]"}], "[", "t", "]"}]}], "}"}]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"FUNCTION", " ", "TO", " ", "SOLVE", " ", "ALL", " ", "EQUATION"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Finding", " ", "the", " ", "cost", " ", "function"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"J", "[", 
    RowBox[{"xsol_", ",", "usol_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], "*", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"xsol", "-", "Xd"}], ")"}], ".", "Q", ".", 
           RowBox[{"(", 
            RowBox[{"xsol", "-", "Xd"}], ")"}]}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{"usol", ".", "R", ".", "usol"}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", " ", "False"}]}], 
          "}"}]}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xsol", "-", "Xd"}], ")"}], ".", "P1", ".", 
        RowBox[{"(", 
         RowBox[{"xsol", "-", "Xd"}], ")"}]}], ")"}]}]}], "/.", 
    RowBox[{"t", "\[Rule]", " ", "T"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Directional", " ", "cost"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DJ", "[", 
    RowBox[{"xsol_", ",", "zsol_", ",", "usol_", ",", "vsol_"}], "]"}], ":=", 
   
   RowBox[{
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Q", ".", 
         RowBox[{"(", 
          RowBox[{"xsol", "-", "Xd"}], ")"}], ".", "zsol"}], " ", "+", " ", 
        RowBox[{"R", ".", "usol", ".", "vsol"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", " ", "False"}]}], 
         "}"}]}]}], "]"}], "+", 
     RowBox[{"(", 
      RowBox[{"P1", ".", 
       RowBox[{"(", 
        RowBox[{"xsol", "-", "Xd"}], ")"}], ".", "zsol"}], ")"}]}], "/.", 
    RowBox[{"t", "\[Rule]", " ", "T"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Solving", " ", "Riccati", " ", "Equation"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ric", "[", 
     RowBox[{"AA_", ",", "BB_", ",", "QQ_", ",", "RR_", ",", "P1_"}], "]"}], ":=",
     " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PMat", ",", "RicEq"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PMat", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"P", "[", "i", "]"}], "[", "j", "]"}], "[", "t", "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NS"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "NS"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"RicEq", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "AA", "]"}], ".", "PMat"}], " ", "+", " ", 
         RowBox[{"PMat", ".", "AA"}], " ", "-", " ", 
         RowBox[{"PMat", ".", "BB", ".", 
          RowBox[{"Inverse", "[", "RR", "]"}], ".", 
          RowBox[{"Transpose", "[", "BB", "]"}], ".", "PMat"}], " ", "+", " ",
          "QQ"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"PMat", "/.", 
        RowBox[{
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"P", "[", "i", "]"}], "[", "j", "]"}], "'"}], "[",
                    "t", "]"}]}], "\[Equal]", " ", 
                 RowBox[{"RicEq", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"P", "[", "i", "]"}], "[", "j", "]"}], "[", "T", 
                  "]"}], "\[Equal]", " ", 
                 RowBox[{"P1", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "NS"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "NS"}], "}"}]}], "]"}], "]"}], ",", 
           RowBox[{"Flatten", "[", "PMat", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"REqSolve", "[", 
    RowBox[{
    "AA_", ",", "BB_", ",", "QQ_", ",", "RR_", ",", "PP_", ",", "P1_", ",", 
     "Xd_", ",", "xsol_", ",", "usol_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rmat", ",", "REq", ",", "solr", ",", "rsol"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rmat", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"r", "[", "i", "]"}], "[", "t", "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"REq", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"AA", "-", 
            RowBox[{"BB", ".", 
             RowBox[{"Inverse", "[", "RR", "]"}], ".", 
             RowBox[{"BB", "\[Transpose]"}], ".", "PP"}]}], ")"}], 
          "\[Transpose]"}], ".", "rmat"}], "+", 
        RowBox[{
         RowBox[{"QQ", "\[Transpose]"}], ".", 
         RowBox[{"(", 
          RowBox[{"xsol", "-", "Xd"}], ")"}]}], " ", "-", " ", 
        RowBox[{"PP", ".", "BB", ".", 
         RowBox[{"Inverse", "[", "RR", "]"}], ".", "RR", ".", "usol"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"solr", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"r", "[", "i", "]"}], "'"}], "[", "t", "]"}]}], 
                "\[Equal]", " ", 
                RowBox[{"REq", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"r", "[", "i", "]"}], "[", "T", "]"}], "\[Equal]", 
               " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"P1", ".", 
                   RowBox[{"(", 
                    RowBox[{"xsol", "-", "Xd"}], ")"}]}], "/.", 
                  RowBox[{"t", "\[Rule]", " ", "T"}]}], ")"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"Flatten", "[", "rmat", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rsol", " ", "=", " ", 
       RowBox[{"rmat", "/.", 
        RowBox[{"solr", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", "rsol", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Finding", " ", "Descent", " ", "Direction"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DescentDir", "[", 
    RowBox[{
    "AA_", ",", "BB_", ",", "QQ_", ",", "RR_", ",", "rsol_", ",", "Psol_", 
     ",", "usol_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "v", ",", "dynamz", ",", "initconz", ",", "EqZ", ",", "solz", ",", 
       "ztraj", ",", "vtraj", ",", "Z"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Z", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "[", "i", "]"}], "[", "t", "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}]}], ";"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"v", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"Inverse", "[", "RR", "]"}], ".", 
           RowBox[{"BB", "\[Transpose]"}], ".", "Psol", ".", 
           RowBox[{"Flatten", "[", "Z", "]"}]}]}], "-", 
         RowBox[{
          RowBox[{"Inverse", "[", "RR", "]"}], ".", 
          RowBox[{"BB", "\[Transpose]"}], ".", "rsol"}], " ", "-", " ", 
         RowBox[{
          RowBox[{"Inverse", "[", "RR", "]"}], ".", "RR", ".", "usol"}]}], 
        ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dynamz", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"D", "[", 
             RowBox[{"Z", ",", "t"}], "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"AA", ".", "Z"}], "+", 
              RowBox[{"BB", ".", "v"}]}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"initconz", " ", "=", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Z", "/.", 
           RowBox[{"t", "\[Rule]", " ", "0"}]}], "]"}], "\[Equal]", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"Inverse", "[", 
             RowBox[{"Psol", "/.", 
              RowBox[{"t", "\[Rule]", " ", "0"}]}], "]"}], ".", 
            RowBox[{"(", 
             RowBox[{"rsol", "/.", 
              RowBox[{"t", "\[Rule]", " ", "0"}]}], ")"}]}]}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"EqZ", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"dynamz", ",", "initconz"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"solz", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"EqZ", ",", 
         RowBox[{"Flatten", "[", "Z", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ztraj", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Z", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
          RowBox[{"solz", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vtraj", "=", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", "v", "]"}], "/.", 
        RowBox[{"solz", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ztraj", ",", "vtraj"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Armijo", "[", 
    RowBox[{"xtraj_", ",", "utraj_", ",", "zsol_", ",", "vsol_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Beta]", ",", "\[Gamma]", ",", "\[Alpha]", ",", "n", ",", "xold", ",",
        "uold", ",", "xnew", ",", "unew", ",", "FOld", ",", "Fnew", ",", 
       "Dg\[Zeta]", ",", "linSearchIter", ",", "maxiters", ",", "gradient"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", "=", " ", 
       RowBox[{"2", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", " ", "=", " ", "0.8"}], ";", "\[IndentingNewLine]", 
      RowBox[{"n", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", " ", "=", " ", "\[Beta]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "may", " ", "be", " ", "interpcurve", " ", "here", " ", "is", " ", 
         "good"}], "..."}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xtraj", ",", "utraj"}], "}"}], "=", 
         RowBox[{"InterpCurve", "[", 
          RowBox[{"xtraj", ",", "utraj"}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xold", ",", "uold"}], "}"}], " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"xtraj", ",", "utraj"}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "former", " ", "trajectory"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xnew", ",", "unew"}], "}"}], " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xold", "+", 
          RowBox[{"\[Gamma]", "*", "zsol"}]}], ",", 
         RowBox[{"uold", "+", 
          RowBox[{"\[Gamma]", "*", "vsol"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xnew", ",", "unew"}], "}"}], "=", " ", 
       RowBox[{"Proj", "[", 
        RowBox[{"xnew", ",", "unew"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"FOld", " ", "=", " ", 
       RowBox[{"J", "[", 
        RowBox[{"xold", ",", "uold"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Dg\[Zeta]", " ", "=", " ", 
       RowBox[{"DJ", "[", 
        RowBox[{"xold", ",", "zsol", ",", "uold", ",", "vsol"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Fnew", " ", "=", " ", 
       RowBox[{"J", "[", 
        RowBox[{"xnew", ",", "unew"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<FOld = \>\"", ",", " ", "FOld", ",", " ", "\"\< and Fnew = \>\"", 
        ",", " ", "Fnew", ",", " ", "\"\< and Dg\[Zeta] = \>\"", ",", " ", 
        "Dg\[Zeta]"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"linSearchIter", " ", "=", " ", "0"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxiters", " ", "=", " ", "40"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<While loop is \>\"", ",", 
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{"Fnew", ">", " ", 
           RowBox[{"FOld", "+", 
            RowBox[{"\[Alpha]", "*", "\[Gamma]", "*", "Dg\[Zeta]"}]}]}], ",", 
          " ", 
          RowBox[{"linSearchIter", " ", "<", " ", "maxiters"}]}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{"Fnew", ">", " ", 
           RowBox[{"FOld", "+", 
            RowBox[{"\[Alpha]", "*", "\[Gamma]", "*", "Dg\[Zeta]"}]}]}], ",", 
          " ", 
          RowBox[{"linSearchIter", " ", "<", " ", "maxiters"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n", "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Gamma]", " ", "=", " ", 
          SuperscriptBox["\[Beta]", "n"]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<\[Alpha] = \>\"", ",", " ", "\[Alpha]", ",", " ", 
             "\"\< \[Beta] = \>\"", ",", " ", "\[Beta]", ",", " ", 
             "\"\< \[Gamma] = \>\"", ",", "\[Gamma]"}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xnew", ",", "unew"}], "}"}], " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xold", "+", 
             RowBox[{"\[Gamma]", "*", "zsol"}]}], ",", 
            RowBox[{"uold", "+", 
             RowBox[{"\[Gamma]", "*", "vsol"}]}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xnew", ",", "unew"}], "}"}], "=", " ", 
          RowBox[{"Proj", "[", 
           RowBox[{"xnew", ",", "unew"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xnew", ",", "unew"}], "}"}], "=", 
            RowBox[{"InterpCurve", "[", 
             RowBox[{"xnew", ",", "unew"}], "]"}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Fnew", " ", "=", " ", 
          RowBox[{"J", "[", 
           RowBox[{"xnew", ",", "unew"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Armijo Iteration = \>\"", ",", " ", "linSearchIter", ",", " ", 
           "\"\<, Current J = \>\"", ",", " ", "Fnew"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"linSearchIter", "++"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<End Armijo loop\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"output", " ", "the", " ", "x"}], "-", "trajectory"}], ",", 
        " ", 
        RowBox[{"u", "-", 
         RowBox[{"trajectory", " ", "and", " ", "gradient"}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"xnew", ",", "unew", ",", "Dg\[Zeta]"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Proj", "[", 
    RowBox[{"\[Alpha]traj_", ",", "\[Mu]traj_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Psolr", ",", "Kr", ",", "dynam", ",", "initcon", ",", "Eqs", ",", 
       "utraj", ",", "sol", ",", "xsol", ",", "Usub"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Psolr", " ", "=", " ", 
       RowBox[{"Ric", "[", 
        RowBox[{"Asol", ",", "Bsol", ",", "Qr", ",", "Rr", ",", "P1r"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Kr", " ", "=", " ", 
       RowBox[{
        RowBox[{"Inverse", "[", "Rr", "]"}], ".", 
        RowBox[{"Bsol", "\[Transpose]"}], ".", "Psolr"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dynam", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"D", "[", 
             RowBox[{"X", ",", "t"}], "]"}], "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", " ", 
          RowBox[{
           RowBox[{"Flatten", "[", "f", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"initcon", " ", "=", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"X", "/.", 
           RowBox[{"t", "\[Rule]", " ", "0"}]}], "]"}], "\[Equal]", " ", 
         RowBox[{"Flatten", "[", "x0", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Eqs", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"dynam", ",", "initcon"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"utraj", " ", "=", " ", 
         RowBox[{"\[Mu]traj", " ", "+", " ", 
          RowBox[{"Kr", ".", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]traj", "-", 
             RowBox[{"Flatten", "[", "X", "]"}]}], ")"}]}]}]}], ";"}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"utraj", " ", "=", " ", 
       RowBox[{"\[Mu]traj", " ", "+", " ", 
        RowBox[{"Kr", ".", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]traj", "-", 
           RowBox[{"(", 
            RowBox[{"Flatten", "[", "X", "]"}], ")"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"substitute", " ", "table"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Usub", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"U", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Rule]", " ", 
          RowBox[{"utraj", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "ulen"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sol", " ", "=", " ", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Eqs", "/.", "Usub"}], ",", 
         RowBox[{"Flatten", "[", "X", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xsol", " ", "=", "  ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
          RowBox[{"sol", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"xsol", ",", 
        RowBox[{"utraj", "/.", 
         RowBox[{"sol", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InterpCurve", "[", 
    RowBox[{"xtraj_", ",", "utraj_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dt", ",", "interpx1", ",", "interpx2", ",", "interpx3", ",", 
       "interpx4", ",", "interpx5", ",", "interpx6", ",", "interpu1", ",", 
       "interpu2", ",", "interpxnew", ",", "interpunew"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dt", " ", "=", " ", "0.05"}], ";", "\[IndentingNewLine]", 
      RowBox[{"interpx1", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            RowBox[{"xtraj", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "0", ",", "T", ",", "dt"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"interpx2", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            RowBox[{"xtraj", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "0", ",", "T", ",", "dt"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"interpx3", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            RowBox[{"xtraj", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "0", ",", "T", ",", "dt"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"interpx4", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            RowBox[{"xtraj", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "0", ",", "T", ",", "dt"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"interpx5", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            RowBox[{"xtraj", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "0", ",", "T", ",", "dt"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"interpx6", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            RowBox[{"xtraj", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "0", ",", "T", ",", "dt"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"interpu1", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            RowBox[{"utraj", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "0", ",", "T", ",", "dt"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"interpu2", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", 
           RowBox[{
            RowBox[{"utraj", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Tau]", ",", "0", ",", "T", ",", "dt"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"interpxnew", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"interpx1", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "t",
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"interpx2", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "t",
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"interpx3", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "t",
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"interpx4", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "t",
           "]"}], ",", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"interpx5", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "t",
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"interpx6", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "t",
           "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interpunew", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"interpu1", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "t",
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{"interpu2", ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}], "[", "t",
           "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"interpxnew", ",", "interpunew"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Linearized", " ", "Dynamics", " ", 
     RowBox[{"x", "'"}]}], "=", " ", 
    RowBox[{"Ax", "+", "Bu"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "f", "]"}], ",", 
     RowBox[{"X", "\[Transpose]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", " ", "=", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "f", "]"}], ",", 
      RowBox[{"U", "\[Transpose]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Compute", " ", "the", " ", "first", " ", "feasible", " ", "solution", " ",
     "set"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"utest", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[Rule]", " ", "0"}], ",", 
      RowBox[{
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "\[Rule]", " ", "0"}]}], 
     "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "test", " ", "control", " ", "using", " ", "set", " ", "control", " ", 
    "to", " ", "zero"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Compute", " ", "the", " ", "dynamics"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dynam", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"D", "[", 
         RowBox[{"X", ",", "t"}], "]"}], "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", " ", 
      RowBox[{
       RowBox[{"Flatten", "[", "f", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initcon", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"X", "/.", 
       RowBox[{"t", "\[Rule]", " ", "0"}]}], "]"}], "\[Equal]", " ", 
     RowBox[{"Flatten", "[", "x0", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eqs", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"dynam", ",", "initcon"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", " ", "=", " ", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"Eqs", "/.", "utest"}], ",", 
      RowBox[{"Flatten", "[", "X", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"First", " ", "Linearize", " ", "DYNAMICS"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xsol", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"X", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
      RowBox[{"sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"usol", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xsol", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"xsol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Matrix", " ", "containing", " ", "dynamics"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Asol", " ", "=", " ", 
   RowBox[{
    RowBox[{"A", "/.", 
     RowBox[{"sol", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", "utest"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Bsol", " ", "=", " ", 
    RowBox[{
     RowBox[{"B", "/.", 
      RowBox[{"sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "/.", "utest"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Riccati", " ", "Equation", " ", "P", 
    RowBox[{"(", "t", ")"}], " ", "and", " ", "r", 
    RowBox[{"(", "t", ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Psol", " ", "=", " ", 
   RowBox[{"Ric", "[", 
    RowBox[{"Asol", ",", "Bsol", ",", "Q", ",", "R", ",", "P1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsol", " ", "=", " ", 
   RowBox[{"REqSolve", "[", 
    RowBox[{
    "Asol", ",", "Bsol", ",", "Q", ",", "R", ",", "Psol", ",", "P1", ",", 
     "Xd", ",", "xsol", ",", "usol"}], "]"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"zsol", ",", "vsol"}], "}"}], "=", 
    RowBox[{"DescentDir", "[", 
     RowBox[{
     "Asol", ",", " ", "Bsol", ",", " ", "Q", ",", " ", "R", ",", " ", "rsol",
       ",", " ", "Psol", ",", " ", "usol"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"first", " ", "trajcetory"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xtraj", ",", "utraj"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"xsol", ",", "usol"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"clear", " ", "unused", " ", "variable"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"xsol", ",", "usol", ",", "sol"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Interpolating", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{"Norm", " ", "of", " ", "gradient"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", " ", "=", " ", 
    RowBox[{"Norm", "[", 
     RowBox[{"DJ", "[", 
      RowBox[{"xtraj", ",", "zsol", ",", "utraj", ",", "vsol"}], "]"}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Initial Cost is \>\"", ",", " ", 
    RowBox[{"J", "[", 
     RowBox[{"xtraj", ",", "utraj"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Initial Direction DJ is \>\"", ",", " ", 
    RowBox[{"DJ", "[", 
     RowBox[{"xtraj", ",", "zsol", ",", "utraj", ",", "vsol"}], "]"}], ",", 
    " ", "\"\<(hope to get minus - if not please contact me!)\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", "\"\<Let Start the Optimization Loop!\>\"", "]"}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", " ", "OPTIMIZATION"}], " ", "ITERATION"}], " ", "***)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"initial", " ", "of", " ", "iteration"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iter", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxiter", " ", "=", " ", "18"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"iter", "\[LessEqual]", " ", "maxiter"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"Abs", "[", "\[Delta]", "]"}], ">", "0.05"}]}], ")"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"obtain", " ", "linearize", " ", "dynamics"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Xsub", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Rule]", " ", 
        RowBox[{"xtraj", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "xlen"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Usub", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"U", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Rule]", " ", 
        RowBox[{"utraj", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "ulen"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Asol", " ", "=", " ", 
     RowBox[{
      RowBox[{"A", "/.", "Xsub"}], "/.", "Usub"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Bsol", " ", "=", " ", 
     RowBox[{
      RowBox[{"B", "/.", "Xsub"}], "/.", "Usub"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Solving", " ", "Riccati", " ", "Equation"}], ",", " ", 
      RowBox[{"r", 
       RowBox[{"(", "t", ")"}], " ", "equation"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Psol", " ", "=", " ", 
     RowBox[{"Ric", "[", 
      RowBox[{"Asol", ",", "Bsol", ",", "Q", ",", "R", ",", "P1"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"rsol", " ", "=", " ", 
     RowBox[{"REqSolve", "[", 
      RowBox[{
      "Asol", ",", "Bsol", ",", "Q", ",", "R", ",", "Psol", ",", "P1", ",", 
       "Xd", ",", "xtraj", ",", "utraj"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zsol", ",", "vsol"}], "}"}], "=", 
     RowBox[{"DescentDir", "[", 
      RowBox[{
      "Asol", ",", " ", "Bsol", ",", " ", "Q", ",", " ", "R", ",", " ", 
       "rsol", ",", " ", "Psol", ",", " ", "utraj"}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"note", " ", "here"}], "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Update", " ", "rule", " ", "using", " ", "Constant", " ", "Step", " ", 
       "Size"}], " ", "+", " ", "Armijo"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"iter", "\[LessEqual]", "14"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xtraj", ",", "utraj"}], "}"}], " ", "=", " ", 
       RowBox[{"Proj", "[", 
        RowBox[{
         RowBox[{"xtraj", "+", 
          RowBox[{"\[Alpha]", "*", "\[Gamma]", "*", "zsol"}]}], ",", 
         RowBox[{"utraj", "+", 
          RowBox[{"\[Alpha]", "*", "\[Gamma]", "*", "vsol"}]}]}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xtraj", ",", "utraj", ",", "\[Delta]"}], "}"}], " ", "=", 
        " ", 
        RowBox[{"Armijo", "[", 
         RowBox[{"xtraj", ",", "utraj", ",", "zsol", ",", "vsol"}], "]"}]}], 
       ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Projection", " ", "and", " ", "interpolation"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xtraj", ",", "utraj"}], "}"}], "=", 
     RowBox[{"InterpCurve", "[", 
      RowBox[{"xtraj", ",", "utraj"}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Print", " ", "Cost", " ", "and", " ", "Update", " ", "the", " ", 
      "iteration"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<Cost of Iteration # \>\"", ",", "iter", ",", "\"\< is \>\"", ",", 
      RowBox[{"J", "[", 
       RowBox[{"xtraj", ",", "utraj"}], "]"}]}], " ", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"iter", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.611014850886713*^9, 3.6110150230644903`*^9}, {
   3.611015882562559*^9, 3.611015898669079*^9}, {3.61101623863138*^9, 
   3.611016315848906*^9}, {3.611016687032741*^9, 3.611016688557201*^9}, {
   3.611018003577097*^9, 3.6110180301016617`*^9}, {3.611018328207018*^9, 
   3.611018334262953*^9}, {3.6110193734111633`*^9, 3.611019382384385*^9}, {
   3.61101961919631*^9, 3.611019623242691*^9}, {3.6110198851445827`*^9, 
   3.611019892207088*^9}, {3.611020034032249*^9, 3.611020040990076*^9}, {
   3.611020541178738*^9, 3.61102056422368*^9}, {3.611021312770123*^9, 
   3.611021329417025*^9}, {3.6110215226234493`*^9, 3.611021522881702*^9}, {
   3.61102254658963*^9, 3.611022554386834*^9}, {3.611023793483984*^9, 
   3.611023821512238*^9}, {3.6110243682263193`*^9, 3.6110243723595543`*^9}, {
   3.611058840358611*^9, 3.611058852162291*^9}, {3.6110589183459387`*^9, 
   3.611058918867032*^9}, 3.611059235278347*^9, {3.611059311578001*^9, 
   3.6110593124312763`*^9}, {3.6110594017574673`*^9, 3.611059409157446*^9}, {
   3.611059456029242*^9, 3.6110594594582663`*^9}, {3.61105982023214*^9, 
   3.6110598433496*^9}, {3.611059904937551*^9, 3.6110599122864647`*^9}, {
   3.611059976118812*^9, 3.611059981436387*^9}, {3.6110601982937937`*^9, 
   3.611060244948492*^9}, {3.6110604030538597`*^9, 3.611060403159466*^9}, {
   3.611060559389369*^9, 3.611060571811781*^9}, {3.611061716206772*^9, 
   3.611061734307597*^9}, {3.6110621969799232`*^9, 3.611062197235618*^9}, {
   3.61106228523168*^9, 3.6110623239392843`*^9}, {3.611062447149728*^9, 
   3.611062449203702*^9}, {3.611062538848477*^9, 3.611062544947185*^9}, 
   3.611062594216052*^9, 3.611062625834676*^9, {3.611062669698881*^9, 
   3.611062670981071*^9}, {3.6110627566561813`*^9, 3.611062786345724*^9}, {
   3.611066555663639*^9, 3.611066562816978*^9}, {3.6110667753096743`*^9, 
   3.6110667754058533`*^9}, {3.6110671806394663`*^9, 
   3.6110671808874483`*^9}, {3.611067365887096*^9, 3.611067366547689*^9}, {
   3.611067541433066*^9, 3.611067554747739*^9}, {3.611067797028037*^9, 
   3.6110678026322823`*^9}, {3.611068213202078*^9, 3.611068213470779*^9}, 
   3.611068303735855*^9, 3.611068339628429*^9, 3.61106837802514*^9, {
   3.6110695734279947`*^9, 3.611069575390471*^9}, {3.611069619987805*^9, 
   3.611069626344317*^9}, {3.611091605386629*^9, 3.611091613831545*^9}, {
   3.611091770444269*^9, 3.6110917728036013`*^9}, {3.611091864003742*^9, 
   3.611091877627306*^9}, {3.611092418206285*^9, 3.611092422022416*^9}, {
   3.611092486060375*^9, 3.611092493340674*^9}, {3.6110925350568113`*^9, 
   3.611092547368072*^9}, {3.611092605735754*^9, 3.611092606057405*^9}, {
   3.611092715247431*^9, 3.6110927169786882`*^9}, {3.611092748574606*^9, 
   3.611092765616819*^9}, {3.611092857095948*^9, 3.6110928613528633`*^9}, {
   3.611148068632574*^9, 3.611148097693832*^9}, {3.611148130034944*^9, 
   3.611148131965423*^9}, {3.6111481863684*^9, 3.611148188141531*^9}, {
   3.611148747028016*^9, 3.611148837378727*^9}, 3.611148877264151*^9, {
   3.611148960745098*^9, 3.611148960818612*^9}, {3.611189522201721*^9, 
   3.6111895223310957`*^9}, {3.611255361712834*^9, 3.611255426198656*^9}, {
   3.611255697843177*^9, 3.611255699045686*^9}, {3.611255886766905*^9, 
   3.6112558961970367`*^9}, {3.611255992594357*^9, 3.611256024438048*^9}, {
   3.611256470652213*^9, 3.6112564810002604`*^9}, {3.611256625151492*^9, 
   3.611256636940803*^9}, {3.611256796421607*^9, 3.6112568120618343`*^9}, {
   3.611257953011738*^9, 3.6112579538645678`*^9}, {3.6112580645199337`*^9, 
   3.61125807563202*^9}, {3.611258356496955*^9, 3.611258356689253*^9}, {
   3.611258390173603*^9, 3.611258392566833*^9}, {3.61125858929922*^9, 
   3.6112585924453363`*^9}, {3.611258737950322*^9, 3.61125876481073*^9}, {
   3.611258884221191*^9, 3.6112588904736643`*^9}, {3.61125904553104*^9, 
   3.611259071055867*^9}, {3.611259241523855*^9, 3.61125925490835*^9}, {
   3.6112593081340513`*^9, 3.6112593110809937`*^9}, {3.611259581353093*^9, 
   3.611259590391282*^9}, {3.61125987416698*^9, 3.611259898151658*^9}, {
   3.611260188790536*^9, 3.611260200047255*^9}, {3.611260398632113*^9, 
   3.611260399415242*^9}, {3.6112604401581078`*^9, 3.611260447608577*^9}, {
   3.611260555019249*^9, 3.6112605571996393`*^9}, {3.6112606367593718`*^9, 
   3.611260688763053*^9}, {3.611261158150013*^9, 3.6112611758761263`*^9}, {
   3.611261426073777*^9, 3.611261430238764*^9}, {3.611261503061948*^9, 
   3.611261510171815*^9}, {3.6112659609425898`*^9, 3.6112659610273933`*^9}, 
   3.611348695415876*^9, {3.611349119754003*^9, 3.61134913161467*^9}, {
   3.611349216495405*^9, 3.611349223101769*^9}, {3.6113495690729923`*^9, 
   3.6113495705700903`*^9}, {3.6113497808950167`*^9, 
   3.6113498066504393`*^9}, {3.6113500700250883`*^9, 3.611350083493905*^9}, {
   3.61135036399078*^9, 3.611350393446837*^9}, {3.611350968391152*^9, 
   3.611350968514778*^9}, {3.6113511298524323`*^9, 3.611351131388009*^9}, {
   3.611352330536429*^9, 3.611352363029478*^9}, 3.611352447406249*^9, {
   3.6113525655373287`*^9, 3.611352568056746*^9}, {3.6113526194505663`*^9, 
   3.611352622058413*^9}, {3.61135294505652*^9, 3.611352948742056*^9}, {
   3.611354628100779*^9, 3.611354629305573*^9}, {3.61135475217332*^9, 
   3.6113547641535788`*^9}, {3.61135570066759*^9, 3.611355728213559*^9}, {
   3.61135582145888*^9, 3.61135584834937*^9}, {3.611356256285098*^9, 
   3.6113562588406143`*^9}, {3.611356613349924*^9, 3.6113566403197613`*^9}, {
   3.61136330406912*^9, 3.611363304600561*^9}, {3.6113636367982616`*^9, 
   3.611363638901822*^9}, {3.611363797151658*^9, 3.611363817085318*^9}, {
   3.611363978820009*^9, 3.6113639798309593`*^9}, {3.611364047563849*^9, 
   3.6113640838093452`*^9}, {3.61136462847507*^9, 3.61136463074518*^9}, {
   3.611364671412725*^9, 3.611364703373622*^9}, {3.6113656563207197`*^9, 
   3.611365684359515*^9}, {3.611365991536847*^9, 3.611365991664978*^9}, {
   3.611366295633847*^9, 3.611366298705394*^9}, {3.611367212641137*^9, 
   3.611367213464265*^9}, {3.611369052283217*^9, 3.611369052807671*^9}, {
   3.611369356227133*^9, 3.611369379658842*^9}, {3.611369626039453*^9, 
   3.611369626418221*^9}, {3.611520026648326*^9, 3.611520052901885*^9}, {
   3.611520331952732*^9, 3.611520332191245*^9}, {3.6115212147640963`*^9, 
   3.611521220895183*^9}, {3.611591814792768*^9, 3.611591825731205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Cost is \"\>", "\[InvisibleSpace]", 
   "207114.5189489334`"}],
  SequenceForm["Initial Cost is ", 207114.5189489334],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.611148819603644*^9, 3.6111488545340014`*^9, 3.611148893780843*^9, 
   3.611148972303629*^9, 3.611149595103217*^9, 3.611255450173624*^9, 
   3.611255547314274*^9, 3.6112557057365217`*^9, 3.611256028627717*^9, {
   3.611256633258586*^9, 3.611256638808661*^9}, 3.611257960330596*^9, 
   3.6112580899116507`*^9, 3.611258366524815*^9, 3.61125839918797*^9, 
   3.611258598291675*^9, 3.611258777782947*^9, 3.611258896459532*^9, 
   3.6112590820893383`*^9, 3.611259321654923*^9, 3.6112595947730303`*^9, 
   3.6112602068195257`*^9, 3.611260676462433*^9, 3.611260950595009*^9, 
   3.611261052873189*^9, 3.611261094603724*^9, 3.6112615345677223`*^9, 
   3.61126597189015*^9, 3.611266454753215*^9, 3.611348704868492*^9, 
   3.611349177312071*^9, {3.611349557386876*^9, 3.611349580714679*^9}, 
   3.611349634011942*^9, 3.611350018270132*^9, 3.611350380869277*^9, 
   3.611350724757414*^9, 3.6113515922806873`*^9, 3.6113523727605247`*^9, 
   3.611352576429522*^9, 3.6113526306606503`*^9, 3.611354347474366*^9, 
   3.611354771325321*^9, 3.611355742094901*^9, 3.611355876346807*^9, 
   3.6113560477182617`*^9, 3.611363265114345*^9, 3.611363312939705*^9, 
   3.611363648154354*^9, 3.611363825689673*^9, 3.611363988149747*^9, {
   3.611364055868154*^9, 3.611364092746867*^9}, {3.6113646866123466`*^9, 
   3.611364706121459*^9}, 3.6113652663824453`*^9, {3.611365983702614*^9, 
   3.611366011613022*^9}, 3.6113663762881823`*^9, 3.6113690651049957`*^9, 
   3.611520057504826*^9, 3.611591250972485*^9, 3.61159178378224*^9, 
   3.6115918340969048`*^9, 3.611600845504766*^9, 3.626390884598806*^9, 
   3.626450229418944*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial Direction DJ is \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "404732.15199378866`"}], 
   "\[InvisibleSpace]", "\<\"(hope to get minus - if not please contact \
me!)\"\>"}],
  SequenceForm[
  "Initial Direction DJ is ", -404732.15199378866`, 
   "(hope to get minus - if not please contact me!)"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.611148819603644*^9, 3.6111488545340014`*^9, 3.611148893780843*^9, 
   3.611148972303629*^9, 3.611149595103217*^9, 3.611255450173624*^9, 
   3.611255547314274*^9, 3.6112557057365217`*^9, 3.611256028627717*^9, {
   3.611256633258586*^9, 3.611256638808661*^9}, 3.611257960330596*^9, 
   3.6112580899116507`*^9, 3.611258366524815*^9, 3.61125839918797*^9, 
   3.611258598291675*^9, 3.611258777782947*^9, 3.611258896459532*^9, 
   3.6112590820893383`*^9, 3.611259321654923*^9, 3.6112595947730303`*^9, 
   3.6112602068195257`*^9, 3.611260676462433*^9, 3.611260950595009*^9, 
   3.611261052873189*^9, 3.611261094603724*^9, 3.6112615345677223`*^9, 
   3.61126597189015*^9, 3.611266454753215*^9, 3.611348704868492*^9, 
   3.611349177312071*^9, {3.611349557386876*^9, 3.611349580714679*^9}, 
   3.611349634011942*^9, 3.611350018270132*^9, 3.611350380869277*^9, 
   3.611350724757414*^9, 3.6113515922806873`*^9, 3.6113523727605247`*^9, 
   3.611352576429522*^9, 3.6113526306606503`*^9, 3.611354347474366*^9, 
   3.611354771325321*^9, 3.611355742094901*^9, 3.611355876346807*^9, 
   3.6113560477182617`*^9, 3.611363265114345*^9, 3.611363312939705*^9, 
   3.611363648154354*^9, 3.611363825689673*^9, 3.611363988149747*^9, {
   3.611364055868154*^9, 3.611364092746867*^9}, {3.6113646866123466`*^9, 
   3.611364706121459*^9}, 3.6113652663824453`*^9, {3.611365983702614*^9, 
   3.611366011613022*^9}, 3.6113663762881823`*^9, 3.6113690651049957`*^9, 
   3.611520057504826*^9, 3.611591250972485*^9, 3.61159178378224*^9, 
   3.6115918340969048`*^9, 3.611600845504766*^9, 3.626390884598806*^9, 
   3.6264502294543753`*^9}],

Cell[BoxData["\<\"Let Start the Optimization Loop!\"\>"], "Print",
 CellChangeTimes->{
  3.611148819603644*^9, 3.6111488545340014`*^9, 3.611148893780843*^9, 
   3.611148972303629*^9, 3.611149595103217*^9, 3.611255450173624*^9, 
   3.611255547314274*^9, 3.6112557057365217`*^9, 3.611256028627717*^9, {
   3.611256633258586*^9, 3.611256638808661*^9}, 3.611257960330596*^9, 
   3.6112580899116507`*^9, 3.611258366524815*^9, 3.61125839918797*^9, 
   3.611258598291675*^9, 3.611258777782947*^9, 3.611258896459532*^9, 
   3.6112590820893383`*^9, 3.611259321654923*^9, 3.6112595947730303`*^9, 
   3.6112602068195257`*^9, 3.611260676462433*^9, 3.611260950595009*^9, 
   3.611261052873189*^9, 3.611261094603724*^9, 3.6112615345677223`*^9, 
   3.61126597189015*^9, 3.611266454753215*^9, 3.611348704868492*^9, 
   3.611349177312071*^9, {3.611349557386876*^9, 3.611349580714679*^9}, 
   3.611349634011942*^9, 3.611350018270132*^9, 3.611350380869277*^9, 
   3.611350724757414*^9, 3.6113515922806873`*^9, 3.6113523727605247`*^9, 
   3.611352576429522*^9, 3.6113526306606503`*^9, 3.611354347474366*^9, 
   3.611354771325321*^9, 3.611355742094901*^9, 3.611355876346807*^9, 
   3.6113560477182617`*^9, 3.611363265114345*^9, 3.611363312939705*^9, 
   3.611363648154354*^9, 3.611363825689673*^9, 3.611363988149747*^9, {
   3.611364055868154*^9, 3.611364092746867*^9}, {3.6113646866123466`*^9, 
   3.611364706121459*^9}, 3.6113652663824453`*^9, {3.611365983702614*^9, 
   3.611366011613022*^9}, 3.6113663762881823`*^9, 3.6113690651049957`*^9, 
   3.611520057504826*^9, 3.611591250972485*^9, 3.61159178378224*^9, 
   3.6115918340969048`*^9, 3.611600845504766*^9, 3.626390884598806*^9, 
   3.626450229460181*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Cost of Iteration # \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" is \"\>", "\[InvisibleSpace]", 
   "215195.75824617624`"}],
  SequenceForm["Cost of Iteration # ", 1, " is ", 215195.75824617624`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.611148819603644*^9, 3.6111488545340014`*^9, 3.611148893780843*^9, 
   3.611148972303629*^9, 3.611149595103217*^9, 3.611255450173624*^9, 
   3.611255547314274*^9, 3.6112557057365217`*^9, 3.611256028627717*^9, {
   3.611256633258586*^9, 3.611256638808661*^9}, 3.611257960330596*^9, 
   3.6112580899116507`*^9, 3.611258366524815*^9, 3.61125839918797*^9, 
   3.611258598291675*^9, 3.611258777782947*^9, 3.611258896459532*^9, 
   3.6112590820893383`*^9, 3.611259321654923*^9, 3.6112595947730303`*^9, 
   3.6112602068195257`*^9, 3.611260676462433*^9, 3.611260950595009*^9, 
   3.611261052873189*^9, 3.611261094603724*^9, 3.6112615345677223`*^9, 
   3.61126597189015*^9, 3.611266454753215*^9, 3.611348704868492*^9, 
   3.611349177312071*^9, {3.611349557386876*^9, 3.611349580714679*^9}, 
   3.611349634011942*^9, 3.611350018270132*^9, 3.611350380869277*^9, 
   3.611350724757414*^9, 3.6113515922806873`*^9, 3.6113523727605247`*^9, 
   3.611352576429522*^9, 3.6113526306606503`*^9, 3.611354347474366*^9, 
   3.611354771325321*^9, 3.611355742094901*^9, 3.611355876346807*^9, 
   3.6113560477182617`*^9, 3.611363265114345*^9, 3.611363312939705*^9, 
   3.611363648154354*^9, 3.611363825689673*^9, 3.611363988149747*^9, {
   3.611364055868154*^9, 3.611364092746867*^9}, {3.6113646866123466`*^9, 
   3.611364706121459*^9}, 3.6113652663824453`*^9, {3.611365983702614*^9, 
   3.611366011613022*^9}, 3.6113663762881823`*^9, 3.6113690651049957`*^9, 
   3.611520057504826*^9, 3.611591250972485*^9, 3.61159178378224*^9, 
   3.6115918340969048`*^9, 3.611600845504766*^9, 3.626390884598806*^9, 
   3.626450233265461*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Cost of Iteration # \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" is \"\>", "\[InvisibleSpace]", 
   "146788.30391293377`"}],
  SequenceForm["Cost of Iteration # ", 2, " is ", 146788.30391293377`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.611148819603644*^9, 3.6111488545340014`*^9, 3.611148893780843*^9, 
   3.611148972303629*^9, 3.611149595103217*^9, 3.611255450173624*^9, 
   3.611255547314274*^9, 3.6112557057365217`*^9, 3.611256028627717*^9, {
   3.611256633258586*^9, 3.611256638808661*^9}, 3.611257960330596*^9, 
   3.6112580899116507`*^9, 3.611258366524815*^9, 3.61125839918797*^9, 
   3.611258598291675*^9, 3.611258777782947*^9, 3.611258896459532*^9, 
   3.6112590820893383`*^9, 3.611259321654923*^9, 3.6112595947730303`*^9, 
   3.6112602068195257`*^9, 3.611260676462433*^9, 3.611260950595009*^9, 
   3.611261052873189*^9, 3.611261094603724*^9, 3.6112615345677223`*^9, 
   3.61126597189015*^9, 3.611266454753215*^9, 3.611348704868492*^9, 
   3.611349177312071*^9, {3.611349557386876*^9, 3.611349580714679*^9}, 
   3.611349634011942*^9, 3.611350018270132*^9, 3.611350380869277*^9, 
   3.611350724757414*^9, 3.6113515922806873`*^9, 3.6113523727605247`*^9, 
   3.611352576429522*^9, 3.6113526306606503`*^9, 3.611354347474366*^9, 
   3.611354771325321*^9, 3.611355742094901*^9, 3.611355876346807*^9, 
   3.6113560477182617`*^9, 3.611363265114345*^9, 3.611363312939705*^9, 
   3.611363648154354*^9, 3.611363825689673*^9, 3.611363988149747*^9, {
   3.611364055868154*^9, 3.611364092746867*^9}, {3.6113646866123466`*^9, 
   3.611364706121459*^9}, 3.6113652663824453`*^9, {3.611365983702614*^9, 
   3.611366011613022*^9}, 3.6113663762881823`*^9, 3.6113690651049957`*^9, 
   3.611520057504826*^9, 3.611591250972485*^9, 3.61159178378224*^9, 
   3.6115918340969048`*^9, 3.611600845504766*^9, 3.626390884598806*^9, 
   3.6264502502580442`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animation Part", "Section",
 CellChangeTimes->{{3.611355647055737*^9, 3.61135564959035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Run", " ", "this", " ", "part", " ", "directly", " ", "after", " ", 
     "optimization", " ", "section"}], ",", " ", 
    RowBox[{
     RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", 
     RowBox[{"Quit", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ALL", " ", "PLOTS"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Xd", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", "Thick"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], 
             ")"}], ",", 
            RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "}"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xtraj", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Red"}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], 
             ")"}], ",", 
            RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<t\>\"", ",", 
        "\"\<Desired Trajectory \!\(\*SubscriptBox[\(x\), \(d\)]\)(t) vs. \
x(t)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "  ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "T"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "10"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Xd", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", "Thick"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], 
             ")"}], ",", 
            RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "}"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xtraj", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Green"}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], 
             ")"}], ",", 
            RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<t\>\"", ",", 
        "\"\<Desired Trajectory \!\(\*SubscriptBox[\(y\), \(d\)]\)(t) vs. \
y(t)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "T"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "10"}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xtraj", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"xtraj", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ")"}], 
        ",", 
        RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<X-position\>\"", ",", "\"\<Y-position\>\""}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Parametric Plot of X and Y\>\""}]}],
     "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xtraj", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ")"}], 
        ",", 
        RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<t\>\"", ",", 
        "\"\<Desired Trajectory \!\(\*SubscriptBox[\(\[Theta]\), \(d\)]\)(t) \
vs. \[Theta](t)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "T"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"utraj", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"utraj", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}], ")"}], 
        ",", 
        RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "AxesLabel", "\[Rule]", 
      "\"\<Plot of \!\(\*SubscriptBox[\(u\), \(1\)]\)(t) and \
\!\(\*SubscriptBox[\(u\), \(2\)]\)(t)\>\""}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Rot", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{"\[Theta]", " ", "\[Omega]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Rot", "[", "\[Theta]", "]"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"p", "[", 
            RowBox[{"x", ",", "y"}], "]"}], "}"}], "]"}], ",", "2"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Drawing", " ", "Regtangle", " ", "Function"}], ",", " ", 
     RowBox[{
     "using", " ", "function", " ", "from", " ", "last", " ", "homework"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hom", "[", "point_", "]"}], ":=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"point", ",", "1"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UnHom", "[", "point_", "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"point", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"point", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rect", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.2", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.2", ",", 
         RowBox[{"-", "0.5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.2"}], ",", 
         RowBox[{"-", "0.5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.2"}], ",", "0.5"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Triang", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.2", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.2"}], ",", "0.5"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Fire", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.2", ",", 
         RowBox[{"-", "0.5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.2", ",", 
         RowBox[{"-", "0.8"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", 
         RowBox[{"-", "0.6"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "0.8"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", 
         RowBox[{"-", "0.6"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.2"}], ",", 
         RowBox[{"-", "0.8"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.2"}], ",", 
         RowBox[{"-", "0.5"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rectfunc", "[", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "]"}], ":=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"UnHom", ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Hom", ",", "Rect"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Triangfunc", "[", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "]"}], ":=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"UnHom", ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Hom", ",", "Triang"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Firefunc", "[", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "]"}], ":=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"UnHom", ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Hom", ",", "Fire"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "note", " ", "that", " ", "function", " ", "g", " ", "is", " ", 
     "declared", " ", "from", " ", "above"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rectdraw", "[", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "]"}], ":=", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Gray", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Rectfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Rectfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Rectfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Rectfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Rectfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Rectfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Rectfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Rectfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Triandraw", "[", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "]"}], ":=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Gray", ",", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Triangfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Triangfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Triangfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Triangfunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Firedraw", "[", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "]"}], ":=", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Red", ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "6", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Firefunc", "[", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "]"}], "[", 
           RowBox[{"[", "7", "]"}], "]"}]}], "}"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "[", "\[Tau]_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"xtraj", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/.", 
     RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y", "[", "\[Tau]_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"xtraj", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "/.", 
     RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "\[Tau]_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"xtraj", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "/.", 
     RowBox[{"t", "\[Rule]", " ", "\[Tau]"}]}]}], "\n", 
   RowBox[{
    RowBox[{"star", " ", "=", " ", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"40", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"rocketmovie", "=", " ", 
    RowBox[{"Animate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Rectdraw", "[", 
           RowBox[{
            RowBox[{"x", "[", "\[Tau]", "]"}], ",", 
            RowBox[{"y", "[", "\[Tau]", "]"}], ",", 
            RowBox[{"\[Theta]", "[", "\[Tau]", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Triandraw", "[", 
           RowBox[{
            RowBox[{"x", "[", "\[Tau]", "]"}], ",", 
            RowBox[{"y", "[", "\[Tau]", "]"}], ",", 
            RowBox[{"\[Theta]", "[", "\[Tau]", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Firedraw", "[", 
           RowBox[{
            RowBox[{"x", "[", "\[Tau]", "]"}], ",", 
            RowBox[{"y", "[", "\[Tau]", "]"}], ",", 
            RowBox[{"\[Theta]", "[", "\[Tau]", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ListPlot", "[", 
           RowBox[{"star", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Yellow", ",", 
               RowBox[{"PointSize", "[", "Large", "]"}]}], "}"}]}]}], "]"}]}],
          "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Green", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "40"}], ",", 
                  RowBox[{"-", "3"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"40", ",", 
                  RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}],
           "*)"}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
        " ", 
        RowBox[{"AspectRatio", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
        RowBox[{"PlotRange", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "12"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Background", "\[Rule]", "LightBlue"}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]", ",", "0", ",", "T"}], " ", "}"}], ",", " ", 
      RowBox[{"AnimationRate", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.611015452748535*^9, 3.611015478045022*^9}, {
   3.6110155679070997`*^9, 3.6110155923453197`*^9}, {3.6110159860131197`*^9, 
   3.611016025940855*^9}, {3.61101610085643*^9, 3.611016119389525*^9}, {
   3.611016618348349*^9, 3.6110166782046022`*^9}, {3.611019515701104*^9, 
   3.6110195230026913`*^9}, {3.61102076036404*^9, 3.6110207608700323`*^9}, {
   3.611020820360545*^9, 3.6110208462662*^9}, {3.611020911572291*^9, 
   3.611021271192131*^9}, {3.611021394239127*^9, 3.611021508646474*^9}, {
   3.611021552240069*^9, 3.6110216351145*^9}, {3.611021665510347*^9, 
   3.611021823724882*^9}, {3.6110218690519876`*^9, 3.611021972457685*^9}, {
   3.611022056331232*^9, 3.6110221245260353`*^9}, {3.611022184840342*^9, 
   3.6110222434128523`*^9}, {3.6110224703766813`*^9, 3.611022499544676*^9}, {
   3.611024628885859*^9, 3.6110246534261303`*^9}, {3.611059045998806*^9, 
   3.611059050688151*^9}, {3.61105918256689*^9, 3.611059206662819*^9}, {
   3.611059636347686*^9, 3.611059673957097*^9}, {3.611060672947468*^9, 
   3.611060919029293*^9}, {3.611060952074869*^9, 3.611061007452084*^9}, {
   3.611061118130196*^9, 3.611061124984808*^9}, {3.6110612416305513`*^9, 
   3.6110612820014353`*^9}, {3.611061350121608*^9, 3.611061393538101*^9}, {
   3.611061824211178*^9, 3.611061958339903*^9}, {3.611091696379446*^9, 
   3.6110916991701117`*^9}, {3.6110921614146147`*^9, 3.611092161534322*^9}, {
   3.6110922027788677`*^9, 3.611092312577197*^9}, {3.611092378971513*^9, 
   3.611092379071579*^9}, {3.611148496956272*^9, 3.611148505635005*^9}, {
   3.611148538536351*^9, 3.61114857443515*^9}, {3.611148637949409*^9, 
   3.6111486420104437`*^9}, {3.611148701053084*^9, 3.61114870671113*^9}, {
   3.6111492925637903`*^9, 3.6111492928171453`*^9}, {3.611149408863884*^9, 
   3.611149414122054*^9}, {3.611150085555264*^9, 3.611150085657916*^9}, {
   3.6111511790223427`*^9, 3.6111511799540586`*^9}, {3.611256570461451*^9, 
   3.611256570823913*^9}, {3.6112601497468987`*^9, 3.6112601534011497`*^9}, {
   3.611261888128067*^9, 3.6112619152029133`*^9}, {3.611261969028083*^9, 
   3.611261972604924*^9}, {3.611266917069394*^9, 3.611266925735024*^9}, {
   3.611267272327085*^9, 3.6112673198616877`*^9}, {3.6113549342728853`*^9, 
   3.611354967605492*^9}, 3.611355099214286*^9, {3.611369263692337*^9, 
   3.6113692641644573`*^9}, {3.611369728576057*^9, 3.611369729767974*^9}, {
   3.611520911567305*^9, 3.611520936166175*^9}, {3.611591851077072*^9, 
   3.6115918852855377`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[1, 0.5, 0], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJxFx2kow3Ecx/H/mOVauSJyROTYyjUlYZRckc3xzzDHHPvLFU+EtJqSPLB4
4MgxM7YWWSNFkTu0B2R4gOVq4wERbZPYUPy+n3r36eXPa8qttsIwLOqn3w8Q
fUknfCWJ2N/SmuV2DYSA+W/2DV0UQoiQ8ZFnNoUQIxcaWNEGvhKZIyVNP/LX
kYs+OCUP/EPk86DuWD3/Cnmmg2S25r4gUxfFSnnOO/JY6qdVJBVL+vcET3jn
nkZGTpDcVx3E2iLv98lGyQJH5POaioGZQifkce7Scls5uDzf7iqbAOuTVTRj
K/jVm7SbOgR20Eya7k/B8czrkrA8Z2RLDKPLXATeovcojnngdK8IY3sLuMAg
EKn7wY2zflv1R2CxR1mwMtsFeWPTp4yOg6/rLgcVpeCADQ5lugksI/J1w/3g
+ZUMqfAUfFhpe2HRgl+oey6denAUL0XYagIv2TMr6j1dkVeLGX44F6y1ecM1
1WCzUtXHagQnkcPNmQLwzlyolikB6/AHtzUFmEKSZ8UtgNMLAlcZ2+Bay+2b
Sg3uVUho4Sdg9ZfvaKgO/CjXHsuewI65Y/aBRvCUKpFxZgJ/A7jGr0s=
       "]], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQHed38LQmh4gDAxioOEz4Ne2lhASCf8lPJFJYE8EP
+85nweGN4N+azyn+NwfBn7dGzHx6liicn7xTOdwwQwzOn1ud45AdKQHn+4om
tbwskYLzvR2OS/jlyMD5+51usn/vlYPzP33juXApSAHO1xFNdZnrowjnK84X
ftYZrQTn7/34c31mhDKcL7LBbHl2lgqcf/gQV3FBuSqcLzVPLD2jSA1h/tOK
jqYmdTif462rbiejBpz/9IvQpf4GBP+V7/ybl/ch+Bcj5KVe/0bwAXxNUz8=

       "]], LineBox[CompressedData["
1:eJxNz3tIUwEUBvDrlBilI0WkLMXmyszV1pymSGyhgYTQGEVWKMO3mTmblYGK
bNIqqe4/FjHyufARlWJbDafocBVlTGyVydCFLR8tu27Z1FyrIO7ngcPhB9/5
49uRUybNZxAEkfp3/11eu90RGhArJv4PSxCRY1/nRk9D6zAT5vWzpjsC4UGl
OvrGZliSTuSVh8Lyt4ufk7fDxN0zOyOjYDJ7Op/BgXvmrF9excEu39PZ0ymw
0syPFYvgkPrOYk4qHB+mmXcegSu4Nc7qU/DPzDSq6TKcUHneMF69Ln+nWRms
hN3v1kJV12FKqksu0MBzGbtU3H7YJmaGGYg9tE27R1LG1HDCUP1jjyqOdq65
RSJq4NKejzj6/FrLXtpbRMK8F5p9tP1GyngxD3i0X5LlwQeP8WkbHReXCkfh
m/IYKvrEftq9U+6aj1ZYX1fCicoS0A5i+bJkNpg8NOnHPhmP/l1Fxgo7rF1m
bRrKFqJflUzeOAO7O70ib2kC7QCjvu34V9jtvy1SpEjEP1/DZbvgtg2F96+c
O0D7e8iksGoJvuVfnlmiSKKdxvjWde8CvEwUey2XYNlvWauwChasSJzeOvj9
Ar+WvA1HTlDtOgM8Nn52daYPVn+YzQgfgCmrfbHGBJssoynpr+ECc7dlwgaH
D3PZQVOwxdRRIfoEJw02b9U64I19ZG7pAjxgCNQ3UbDi2VXmmAu26WofJnpg
8smar2gFPtxbKdX8gld7fmjfeOFH3XKPzwf/AcPe9T0=
       "]]}, {}}, {{}, {}, {}}},
    {{}, {}, 
    {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox[
    "\"Desired Trajectory \\!\\(\\*SubscriptBox[\\(x\\), \\(d\\)]\\)(t) vs. \
x(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 25}, {-5, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.611014765551023*^9, {3.611015438245179*^9, 3.611015478629487*^9}, {
   3.611015571084509*^9, 3.611015592838628*^9}, 3.611016074174272*^9, {
   3.611016105527326*^9, 3.611016120247878*^9}, 3.611016540620009*^9, {
   3.611016633366872*^9, 3.6110166790838413`*^9}, 3.611018204279158*^9, 
   3.611018497569044*^9, 3.611019565023622*^9, 3.6110202255413227`*^9, 
   3.611020771339778*^9, 3.611020826586112*^9, 3.611021076571205*^9, {
   3.6110211272668543`*^9, 3.611021193848506*^9}, {3.611021537195156*^9, 
   3.611021562867106*^9}, {3.611021653031872*^9, 3.6110216828503027`*^9}, {
   3.611021744929946*^9, 3.611021799586536*^9}, {3.611021880396413*^9, 
   3.61102189751781*^9}, 3.611021928485592*^9, {3.611022062462628*^9, 
   3.6110220792865887`*^9}, {3.611022189792754*^9, 3.6110222457052298`*^9}, {
   3.61102247182486*^9, 3.6110225005022087`*^9}, 3.611022771182941*^9, 
   3.611024524401619*^9, {3.611024618253963*^9, 3.611024654354446*^9}, 
   3.6110589945841084`*^9, 3.611059051167152*^9, 3.611059107414981*^9, {
   3.6110591837773314`*^9, 3.611059207468968*^9}, {3.611059613621935*^9, 
   3.611059640942287*^9}, 3.6110596750178432`*^9, 3.6110601166339197`*^9, 
   3.611060432498274*^9, 3.611060636601492*^9, {3.611060673869513*^9, 
   3.611060694785328*^9}, {3.611060752537335*^9, 3.6110607626695337`*^9}, 
   3.6110608142869453`*^9, 3.611060854798892*^9, {3.611060910798773*^9, 
   3.611060920007979*^9}, {3.611060967460191*^9, 3.6110610083409157`*^9}, 
   3.611061125751172*^9, {3.611061265817532*^9, 3.611061288359632*^9}, 
   3.611061399545835*^9, 3.611061865036634*^9, 3.611061908915948*^9, 
   3.611061959222206*^9, 3.6110624907486773`*^9, 3.6110665070694313`*^9, 
   3.6110666845153017`*^9, 3.6110669529411383`*^9, 3.6110671489757137`*^9, 
   3.611067438369486*^9, 3.611068033844942*^9, 3.611069822051135*^9, 
   3.611091736250443*^9, 3.611091840649156*^9, 3.611092121855218*^9, 
   3.611092162534218*^9, {3.6110922281945047`*^9, 3.611092253843453*^9}, {
   3.6110922884036827`*^9, 3.611092314288354*^9}, 3.611092379981429*^9, 
   3.61109250750589*^9, 3.6110926651964273`*^9, {3.611148485153399*^9, 
   3.6111485066105337`*^9}, {3.611148541184431*^9, 3.6111485753029413`*^9}, 
   3.611148642824183*^9, 3.611148708417248*^9, {3.611149282390286*^9, 
   3.611149293625431*^9}, {3.611150060159731*^9, 3.611150086603592*^9}, 
   3.6111511808702602`*^9, 3.6112560057278433`*^9, {3.611256551512445*^9, 
   3.611256572907188*^9}, 3.611256842807921*^9, 3.6112592802355328`*^9, 
   3.611259560297493*^9, 3.6112600880361423`*^9, 3.611260161380641*^9, 
   3.6112605875104227`*^9, 3.6112618185074387`*^9, {3.6112618937730293`*^9, 
   3.611261916060094*^9}, 3.611261973423416*^9, 3.61126642809019*^9, 
   3.6112667117422857`*^9, {3.6112669196317596`*^9, 3.611266926934423*^9}, 
   3.6112672838450823`*^9, 3.611267320388331*^9, 3.611349149369729*^9, 
   3.611350258505961*^9, 3.611350583877255*^9, 3.611351537283826*^9, 
   3.611354921826334*^9, 3.6113549711176767`*^9, 3.611355100201899*^9, 
   3.611356657148425*^9, 3.611357244621811*^9, 3.611363587559417*^9, 
   3.6113637615306673`*^9, 3.6113639471112757`*^9, 3.6113645474938383`*^9, 
   3.611365159979381*^9, 3.611365936281225*^9, 3.611367113519683*^9, 
   3.611368078192356*^9, {3.611369705608477*^9, 3.61136973086753*^9}, {
   3.611520861253996*^9, 3.61152093710364*^9}, 3.611591790256954*^9, 
   3.611601581806136*^9, {3.626391750447094*^9, 3.6263917585173798`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0.5, 0], Thickness[Large], Opacity[1.], 
     LineBox[CompressedData["
1:eJxF0AtIEwAQANBNxdRUyvy1aujUZrXyN20gNgvLIM0PfbbKWv42m+Zsloai
YuKHqI2gIJZba7OVUTNMSTTNlWlkTIZUDvFDTK1M52dOzbkM8u7gOB7HHdz5
puYmZ9gQCIT4tfxXKSKLQkqWHyD8j9g8lWMOr5S57qRRmiiQJwKfuj+dZM+T
gVmmxDATVw1mK4jKSW4H+Mwy+9wEVwvWB1QyxrjD4Loi4qptihHs0ihTqxIW
wQ+OrNiEuBCi1y1NLf/uGWsHjpKPp39kOIB7bj+W2JU6g/WZF+/UsTaBZV4X
qOp4N+zLHL0s2e7gtBa/0yE8T3BtUXY0n+0NjvdIrfiRTwIfi+72Pp69Hdxx
aGCD+RYZPLvg3KdL9gHTPDJiauN8wb6yLWM1ZyngNzNL6iyWH9i9IULFv+QP
fqdxEgoKAsAkqSeXd2Un7jcUVpeXU8GGeTedqCwQvMCKMcqu7wJrAnsjdVW7
weGdN9XmG3vwH13yROZdGvjnjoQPNfK9YG8mPb1bsg9M7M0Noj4LAveI8zZH
nQgGtxmumbh96NsCqnHt4+DG4bmSgX50cwXf3yclFOziak3hDKLFB4eIFHYY
2FjPa8sfQSsXXTd2nqfjfcUcgXQcPffUwrTkhIPt2poVJ3+h52y3kZnCCJwP
ltAos2iFPbeu8vJ+8LTbEL3YhBbZ5rH4QgY4xuZ3fe1V9CIhy6ItQHNWOY/o
xejQpcRJSwX6y1Rwmfgemqw3qppa0Lpv2cvjreiqrxNxpHa0sX9kpkSD1mj7
Io9+Qmd2NWj1g2jSexrFZRit1TzJZ46iGW8fblUa0E6t4rScKXR7i3OzzIgW
vq520M2iB5vKnkeY0eJXK1beEvpwY2Gy5A96+eW88rMF/aJBYLZa0X8Biycb
bw==
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
npcN/wfb40ts
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox[
    "\"Desired Trajectory \\!\\(\\*SubscriptBox[\\(y\\), \\(d\\)]\\)(t) vs. \
y(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 25}, {-5, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.611014765551023*^9, {3.611015438245179*^9, 3.611015478629487*^9}, {
   3.611015571084509*^9, 3.611015592838628*^9}, 3.611016074174272*^9, {
   3.611016105527326*^9, 3.611016120247878*^9}, 3.611016540620009*^9, {
   3.611016633366872*^9, 3.6110166790838413`*^9}, 3.611018204279158*^9, 
   3.611018497569044*^9, 3.611019565023622*^9, 3.6110202255413227`*^9, 
   3.611020771339778*^9, 3.611020826586112*^9, 3.611021076571205*^9, {
   3.6110211272668543`*^9, 3.611021193848506*^9}, {3.611021537195156*^9, 
   3.611021562867106*^9}, {3.611021653031872*^9, 3.6110216828503027`*^9}, {
   3.611021744929946*^9, 3.611021799586536*^9}, {3.611021880396413*^9, 
   3.61102189751781*^9}, 3.611021928485592*^9, {3.611022062462628*^9, 
   3.6110220792865887`*^9}, {3.611022189792754*^9, 3.6110222457052298`*^9}, {
   3.61102247182486*^9, 3.6110225005022087`*^9}, 3.611022771182941*^9, 
   3.611024524401619*^9, {3.611024618253963*^9, 3.611024654354446*^9}, 
   3.6110589945841084`*^9, 3.611059051167152*^9, 3.611059107414981*^9, {
   3.6110591837773314`*^9, 3.611059207468968*^9}, {3.611059613621935*^9, 
   3.611059640942287*^9}, 3.6110596750178432`*^9, 3.6110601166339197`*^9, 
   3.611060432498274*^9, 3.611060636601492*^9, {3.611060673869513*^9, 
   3.611060694785328*^9}, {3.611060752537335*^9, 3.6110607626695337`*^9}, 
   3.6110608142869453`*^9, 3.611060854798892*^9, {3.611060910798773*^9, 
   3.611060920007979*^9}, {3.611060967460191*^9, 3.6110610083409157`*^9}, 
   3.611061125751172*^9, {3.611061265817532*^9, 3.611061288359632*^9}, 
   3.611061399545835*^9, 3.611061865036634*^9, 3.611061908915948*^9, 
   3.611061959222206*^9, 3.6110624907486773`*^9, 3.6110665070694313`*^9, 
   3.6110666845153017`*^9, 3.6110669529411383`*^9, 3.6110671489757137`*^9, 
   3.611067438369486*^9, 3.611068033844942*^9, 3.611069822051135*^9, 
   3.611091736250443*^9, 3.611091840649156*^9, 3.611092121855218*^9, 
   3.611092162534218*^9, {3.6110922281945047`*^9, 3.611092253843453*^9}, {
   3.6110922884036827`*^9, 3.611092314288354*^9}, 3.611092379981429*^9, 
   3.61109250750589*^9, 3.6110926651964273`*^9, {3.611148485153399*^9, 
   3.6111485066105337`*^9}, {3.611148541184431*^9, 3.6111485753029413`*^9}, 
   3.611148642824183*^9, 3.611148708417248*^9, {3.611149282390286*^9, 
   3.611149293625431*^9}, {3.611150060159731*^9, 3.611150086603592*^9}, 
   3.6111511808702602`*^9, 3.6112560057278433`*^9, {3.611256551512445*^9, 
   3.611256572907188*^9}, 3.611256842807921*^9, 3.6112592802355328`*^9, 
   3.611259560297493*^9, 3.6112600880361423`*^9, 3.611260161380641*^9, 
   3.6112605875104227`*^9, 3.6112618185074387`*^9, {3.6112618937730293`*^9, 
   3.611261916060094*^9}, 3.611261973423416*^9, 3.61126642809019*^9, 
   3.6112667117422857`*^9, {3.6112669196317596`*^9, 3.611266926934423*^9}, 
   3.6112672838450823`*^9, 3.611267320388331*^9, 3.611349149369729*^9, 
   3.611350258505961*^9, 3.611350583877255*^9, 3.611351537283826*^9, 
   3.611354921826334*^9, 3.6113549711176767`*^9, 3.611355100201899*^9, 
   3.611356657148425*^9, 3.611357244621811*^9, 3.611363587559417*^9, 
   3.6113637615306673`*^9, 3.6113639471112757`*^9, 3.6113645474938383`*^9, 
   3.611365159979381*^9, 3.611365936281225*^9, 3.611367113519683*^9, 
   3.611368078192356*^9, {3.611369705608477*^9, 3.61136973086753*^9}, {
   3.611520861253996*^9, 3.61152093710364*^9}, 3.611591790256954*^9, 
   3.611601581806136*^9, {3.626391750447094*^9, 3.626391758612636*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], Thickness[Large], Opacity[1.], FaceForm[Opacity[
    0.3]], LineBox[CompressedData["
1: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
     "]]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"X-position\"", TraditionalForm], 
    FormBox["\"Y-position\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  Method->{"ScalingFunctions" -> None},
  PlotLabel->FormBox["\"Parametric Plot of X and Y\"", TraditionalForm],
  PlotRange->{{-0.19880716737964715`, 
   10.296961703007508`}, {-0.2563041394868522, 0.0894753538876409}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.611014765551023*^9, {3.611015438245179*^9, 3.611015478629487*^9}, {
   3.611015571084509*^9, 3.611015592838628*^9}, 3.611016074174272*^9, {
   3.611016105527326*^9, 3.611016120247878*^9}, 3.611016540620009*^9, {
   3.611016633366872*^9, 3.6110166790838413`*^9}, 3.611018204279158*^9, 
   3.611018497569044*^9, 3.611019565023622*^9, 3.6110202255413227`*^9, 
   3.611020771339778*^9, 3.611020826586112*^9, 3.611021076571205*^9, {
   3.6110211272668543`*^9, 3.611021193848506*^9}, {3.611021537195156*^9, 
   3.611021562867106*^9}, {3.611021653031872*^9, 3.6110216828503027`*^9}, {
   3.611021744929946*^9, 3.611021799586536*^9}, {3.611021880396413*^9, 
   3.61102189751781*^9}, 3.611021928485592*^9, {3.611022062462628*^9, 
   3.6110220792865887`*^9}, {3.611022189792754*^9, 3.6110222457052298`*^9}, {
   3.61102247182486*^9, 3.6110225005022087`*^9}, 3.611022771182941*^9, 
   3.611024524401619*^9, {3.611024618253963*^9, 3.611024654354446*^9}, 
   3.6110589945841084`*^9, 3.611059051167152*^9, 3.611059107414981*^9, {
   3.6110591837773314`*^9, 3.611059207468968*^9}, {3.611059613621935*^9, 
   3.611059640942287*^9}, 3.6110596750178432`*^9, 3.6110601166339197`*^9, 
   3.611060432498274*^9, 3.611060636601492*^9, {3.611060673869513*^9, 
   3.611060694785328*^9}, {3.611060752537335*^9, 3.6110607626695337`*^9}, 
   3.6110608142869453`*^9, 3.611060854798892*^9, {3.611060910798773*^9, 
   3.611060920007979*^9}, {3.611060967460191*^9, 3.6110610083409157`*^9}, 
   3.611061125751172*^9, {3.611061265817532*^9, 3.611061288359632*^9}, 
   3.611061399545835*^9, 3.611061865036634*^9, 3.611061908915948*^9, 
   3.611061959222206*^9, 3.6110624907486773`*^9, 3.6110665070694313`*^9, 
   3.6110666845153017`*^9, 3.6110669529411383`*^9, 3.6110671489757137`*^9, 
   3.611067438369486*^9, 3.611068033844942*^9, 3.611069822051135*^9, 
   3.611091736250443*^9, 3.611091840649156*^9, 3.611092121855218*^9, 
   3.611092162534218*^9, {3.6110922281945047`*^9, 3.611092253843453*^9}, {
   3.6110922884036827`*^9, 3.611092314288354*^9}, 3.611092379981429*^9, 
   3.61109250750589*^9, 3.6110926651964273`*^9, {3.611148485153399*^9, 
   3.6111485066105337`*^9}, {3.611148541184431*^9, 3.6111485753029413`*^9}, 
   3.611148642824183*^9, 3.611148708417248*^9, {3.611149282390286*^9, 
   3.611149293625431*^9}, {3.611150060159731*^9, 3.611150086603592*^9}, 
   3.6111511808702602`*^9, 3.6112560057278433`*^9, {3.611256551512445*^9, 
   3.611256572907188*^9}, 3.611256842807921*^9, 3.6112592802355328`*^9, 
   3.611259560297493*^9, 3.6112600880361423`*^9, 3.611260161380641*^9, 
   3.6112605875104227`*^9, 3.6112618185074387`*^9, {3.6112618937730293`*^9, 
   3.611261916060094*^9}, 3.611261973423416*^9, 3.61126642809019*^9, 
   3.6112667117422857`*^9, {3.6112669196317596`*^9, 3.611266926934423*^9}, 
   3.6112672838450823`*^9, 3.611267320388331*^9, 3.611349149369729*^9, 
   3.611350258505961*^9, 3.611350583877255*^9, 3.611351537283826*^9, 
   3.611354921826334*^9, 3.6113549711176767`*^9, 3.611355100201899*^9, 
   3.611356657148425*^9, 3.611357244621811*^9, 3.611363587559417*^9, 
   3.6113637615306673`*^9, 3.6113639471112757`*^9, 3.6113645474938383`*^9, 
   3.611365159979381*^9, 3.611365936281225*^9, 3.611367113519683*^9, 
   3.611368078192356*^9, {3.611369705608477*^9, 3.61136973086753*^9}, {
   3.611520861253996*^9, 3.61152093710364*^9}, 3.611591790256954*^9, 
   3.611601581806136*^9, {3.626391750447094*^9, 3.62639175870265*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["

1: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
MScF7qwROY/+Bx3I9O8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox[
    "\"Desired Trajectory \\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
\\(d\\)]\\)(t) vs. \[Theta](t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 25}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.611014765551023*^9, {3.611015438245179*^9, 3.611015478629487*^9}, {
   3.611015571084509*^9, 3.611015592838628*^9}, 3.611016074174272*^9, {
   3.611016105527326*^9, 3.611016120247878*^9}, 3.611016540620009*^9, {
   3.611016633366872*^9, 3.6110166790838413`*^9}, 3.611018204279158*^9, 
   3.611018497569044*^9, 3.611019565023622*^9, 3.6110202255413227`*^9, 
   3.611020771339778*^9, 3.611020826586112*^9, 3.611021076571205*^9, {
   3.6110211272668543`*^9, 3.611021193848506*^9}, {3.611021537195156*^9, 
   3.611021562867106*^9}, {3.611021653031872*^9, 3.6110216828503027`*^9}, {
   3.611021744929946*^9, 3.611021799586536*^9}, {3.611021880396413*^9, 
   3.61102189751781*^9}, 3.611021928485592*^9, {3.611022062462628*^9, 
   3.6110220792865887`*^9}, {3.611022189792754*^9, 3.6110222457052298`*^9}, {
   3.61102247182486*^9, 3.6110225005022087`*^9}, 3.611022771182941*^9, 
   3.611024524401619*^9, {3.611024618253963*^9, 3.611024654354446*^9}, 
   3.6110589945841084`*^9, 3.611059051167152*^9, 3.611059107414981*^9, {
   3.6110591837773314`*^9, 3.611059207468968*^9}, {3.611059613621935*^9, 
   3.611059640942287*^9}, 3.6110596750178432`*^9, 3.6110601166339197`*^9, 
   3.611060432498274*^9, 3.611060636601492*^9, {3.611060673869513*^9, 
   3.611060694785328*^9}, {3.611060752537335*^9, 3.6110607626695337`*^9}, 
   3.6110608142869453`*^9, 3.611060854798892*^9, {3.611060910798773*^9, 
   3.611060920007979*^9}, {3.611060967460191*^9, 3.6110610083409157`*^9}, 
   3.611061125751172*^9, {3.611061265817532*^9, 3.611061288359632*^9}, 
   3.611061399545835*^9, 3.611061865036634*^9, 3.611061908915948*^9, 
   3.611061959222206*^9, 3.6110624907486773`*^9, 3.6110665070694313`*^9, 
   3.6110666845153017`*^9, 3.6110669529411383`*^9, 3.6110671489757137`*^9, 
   3.611067438369486*^9, 3.611068033844942*^9, 3.611069822051135*^9, 
   3.611091736250443*^9, 3.611091840649156*^9, 3.611092121855218*^9, 
   3.611092162534218*^9, {3.6110922281945047`*^9, 3.611092253843453*^9}, {
   3.6110922884036827`*^9, 3.611092314288354*^9}, 3.611092379981429*^9, 
   3.61109250750589*^9, 3.6110926651964273`*^9, {3.611148485153399*^9, 
   3.6111485066105337`*^9}, {3.611148541184431*^9, 3.6111485753029413`*^9}, 
   3.611148642824183*^9, 3.611148708417248*^9, {3.611149282390286*^9, 
   3.611149293625431*^9}, {3.611150060159731*^9, 3.611150086603592*^9}, 
   3.6111511808702602`*^9, 3.6112560057278433`*^9, {3.611256551512445*^9, 
   3.611256572907188*^9}, 3.611256842807921*^9, 3.6112592802355328`*^9, 
   3.611259560297493*^9, 3.6112600880361423`*^9, 3.611260161380641*^9, 
   3.6112605875104227`*^9, 3.6112618185074387`*^9, {3.6112618937730293`*^9, 
   3.611261916060094*^9}, 3.611261973423416*^9, 3.61126642809019*^9, 
   3.6112667117422857`*^9, {3.6112669196317596`*^9, 3.611266926934423*^9}, 
   3.6112672838450823`*^9, 3.611267320388331*^9, 3.611349149369729*^9, 
   3.611350258505961*^9, 3.611350583877255*^9, 3.611351537283826*^9, 
   3.611354921826334*^9, 3.6113549711176767`*^9, 3.611355100201899*^9, 
   3.611356657148425*^9, 3.611357244621811*^9, 3.611363587559417*^9, 
   3.6113637615306673`*^9, 3.6113639471112757`*^9, 3.6113645474938383`*^9, 
   3.611365159979381*^9, 3.611365936281225*^9, 3.611367113519683*^9, 
   3.611368078192356*^9, {3.611369705608477*^9, 3.61136973086753*^9}, {
   3.611520861253996*^9, 3.61152093710364*^9}, 3.611591790256954*^9, 
   3.611601581806136*^9, {3.626391750447094*^9, 3.626391758775344*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
gr3KPf/73z8G1B3dKuh36Tb2P2rQ1Wo=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.], 
    LineBox[CompressedData["
1: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
dtU3n7DJoASnp9/gCsdkMV5NKc9hFiUonn7xNLJZFstZTXvUglOCsH9Se0yP
ymLqDbw/C7mVwGa3oOePozIYFnVTPoFfCYJjf+lwB0lhtlQGLz9hJaBsVYxz
4ySwYZ4r+Q5iSrCTGB40wiuGXfw8/0tfUgmaVl9Z9voIYwz3fRSkZenxqku8
h0P4sSS3nyeZiEoQKCzaeOQlDiuf6B1rV1GCb/yNna610+jCTu34UQMleNC3
K8ZVlB+iWjWUAFECBafxIJ7LIiB4u+gM0VQJ2Eu/unsxSIAWPmty2koJqs5x
czPZykOA6tXpcBclkMMp4OceqwHLwoqqp5sS9HQrGcwXaUBq7YVzFp5K0GVb
dV3x326oNvGY5fVRArfBmUOXE7VhxclsLveKEuRnxE8hrvqwJ9i/7lu4Eghv
owL1yXshID0vSiBKCQrr7u2Ze20Ai/9tCkffUoJwLbXApCUj0FxW/v4qUQlC
52dTNhgQ8Bd2frqUogTTUUWOSYwAc3bV+qeylGCioJr1/SKAuv9PptxcJVhw
rQtY9TKG88kCH74+VgLfYathvh5jmO4650YrUYLyg6Kl27kmoPI3ixT1gl4v
Azve/xhMwYe3fa6+SgleLon7ph0zhQlrxWjVBiVI63KQ6uU0A7KvvfXJN3Q/
5tsu2h01A+/bUSI5rUqgMdyG1T81g7H335/ydSrB8nDwq6va5qAwwe1H7aHv
Fw1SuXGgOXjhDPZe+6IEJaGq447V5jBqkf5h4bsSVLAaigerWADhVGuayk8l
uGRmIXLd0wLcbyy6ef1RguvbUil37lnAj+aD8//9pfPFB6QmLVuA9M/wet4l
JdirVlf9hmAJbkwl0ZZrSiDD4zXdsN8SBgGHr2NQBtq16fui9y1Bwl3nxzyL
MmTg2/kvv7YElwivQmUOZagb53nwYMgSMnNS/E7Q//OK1dp9yZuW0NeA7c0W
UIYA03fLB3dRQWxolvk/EWXg+LCvqU+LCk6bkh95xJUhvOHlAx1rKnzZe+V4
hBw9v4h6CzmYCiIuT8kvFZWhkHIzvfk2Feyv/Dc/p6wMfD8tof0BFe5mML9S
UleGj3v8Gg3p90tP7e7rnlrKMKrALCjRQAWBr8dtsnSV4UDl1t6T7VSwXUnA
9xoog8B3d32JL1RIEnn9gxuUgVKgymM0TIUu7clCczNlyOHyqGkfpwKvvZj/
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
TKDGBywUPbuF/gcpmYXf
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, 
    FormBox[
    "\"Plot of \\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)(t) and \
\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 25}, {-10.513655912590757`, 52.282277161888665`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.611014765551023*^9, {3.611015438245179*^9, 3.611015478629487*^9}, {
   3.611015571084509*^9, 3.611015592838628*^9}, 3.611016074174272*^9, {
   3.611016105527326*^9, 3.611016120247878*^9}, 3.611016540620009*^9, {
   3.611016633366872*^9, 3.6110166790838413`*^9}, 3.611018204279158*^9, 
   3.611018497569044*^9, 3.611019565023622*^9, 3.6110202255413227`*^9, 
   3.611020771339778*^9, 3.611020826586112*^9, 3.611021076571205*^9, {
   3.6110211272668543`*^9, 3.611021193848506*^9}, {3.611021537195156*^9, 
   3.611021562867106*^9}, {3.611021653031872*^9, 3.6110216828503027`*^9}, {
   3.611021744929946*^9, 3.611021799586536*^9}, {3.611021880396413*^9, 
   3.61102189751781*^9}, 3.611021928485592*^9, {3.611022062462628*^9, 
   3.6110220792865887`*^9}, {3.611022189792754*^9, 3.6110222457052298`*^9}, {
   3.61102247182486*^9, 3.6110225005022087`*^9}, 3.611022771182941*^9, 
   3.611024524401619*^9, {3.611024618253963*^9, 3.611024654354446*^9}, 
   3.6110589945841084`*^9, 3.611059051167152*^9, 3.611059107414981*^9, {
   3.6110591837773314`*^9, 3.611059207468968*^9}, {3.611059613621935*^9, 
   3.611059640942287*^9}, 3.6110596750178432`*^9, 3.6110601166339197`*^9, 
   3.611060432498274*^9, 3.611060636601492*^9, {3.611060673869513*^9, 
   3.611060694785328*^9}, {3.611060752537335*^9, 3.6110607626695337`*^9}, 
   3.6110608142869453`*^9, 3.611060854798892*^9, {3.611060910798773*^9, 
   3.611060920007979*^9}, {3.611060967460191*^9, 3.6110610083409157`*^9}, 
   3.611061125751172*^9, {3.611061265817532*^9, 3.611061288359632*^9}, 
   3.611061399545835*^9, 3.611061865036634*^9, 3.611061908915948*^9, 
   3.611061959222206*^9, 3.6110624907486773`*^9, 3.6110665070694313`*^9, 
   3.6110666845153017`*^9, 3.6110669529411383`*^9, 3.6110671489757137`*^9, 
   3.611067438369486*^9, 3.611068033844942*^9, 3.611069822051135*^9, 
   3.611091736250443*^9, 3.611091840649156*^9, 3.611092121855218*^9, 
   3.611092162534218*^9, {3.6110922281945047`*^9, 3.611092253843453*^9}, {
   3.6110922884036827`*^9, 3.611092314288354*^9}, 3.611092379981429*^9, 
   3.61109250750589*^9, 3.6110926651964273`*^9, {3.611148485153399*^9, 
   3.6111485066105337`*^9}, {3.611148541184431*^9, 3.6111485753029413`*^9}, 
   3.611148642824183*^9, 3.611148708417248*^9, {3.611149282390286*^9, 
   3.611149293625431*^9}, {3.611150060159731*^9, 3.611150086603592*^9}, 
   3.6111511808702602`*^9, 3.6112560057278433`*^9, {3.611256551512445*^9, 
   3.611256572907188*^9}, 3.611256842807921*^9, 3.6112592802355328`*^9, 
   3.611259560297493*^9, 3.6112600880361423`*^9, 3.611260161380641*^9, 
   3.6112605875104227`*^9, 3.6112618185074387`*^9, {3.6112618937730293`*^9, 
   3.611261916060094*^9}, 3.611261973423416*^9, 3.61126642809019*^9, 
   3.6112667117422857`*^9, {3.6112669196317596`*^9, 3.611266926934423*^9}, 
   3.6112672838450823`*^9, 3.611267320388331*^9, 3.611349149369729*^9, 
   3.611350258505961*^9, 3.611350583877255*^9, 3.611351537283826*^9, 
   3.611354921826334*^9, 3.6113549711176767`*^9, 3.611355100201899*^9, 
   3.611356657148425*^9, 3.611357244621811*^9, 3.611363587559417*^9, 
   3.6113637615306673`*^9, 3.6113639471112757`*^9, 3.6113645474938383`*^9, 
   3.611365159979381*^9, 3.611365936281225*^9, 3.611367113519683*^9, 
   3.611368078192356*^9, {3.611369705608477*^9, 3.61136973086753*^9}, {
   3.611520861253996*^9, 3.61152093710364*^9}, 3.611591790256954*^9, 
   3.611601581806136*^9, {3.626391750447094*^9, 3.626391758860561*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 3.27, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0, 25}}, Typeset`size$$ = {
    360., {118., 122.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Tau]$14874$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$14874$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         $CellContext`Rectdraw[
          $CellContext`x[$CellContext`\[Tau]$$], 
          $CellContext`y[$CellContext`\[Tau]$$], 
          $CellContext`\[Theta][$CellContext`\[Tau]$$]], 
         $CellContext`Triandraw[
          $CellContext`x[$CellContext`\[Tau]$$], 
          $CellContext`y[$CellContext`\[Tau]$$], 
          $CellContext`\[Theta][$CellContext`\[Tau]$$]], 
         $CellContext`Firedraw[
          $CellContext`x[$CellContext`\[Tau]$$], 
          $CellContext`y[$CellContext`\[Tau]$$], 
          $CellContext`\[Theta][$CellContext`\[Tau]$$]], 
         ListPlot[$CellContext`star, PlotStyle -> {Yellow, 
            PointSize[Large]}]}, AspectRatio -> Automatic, 
        PlotRange -> {{-3, 12}, {-5, 5}}, Background -> LightBlue], 
      "Specifications" :> {{$CellContext`\[Tau]$$, 0, 25, AnimationRate -> 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> "\
Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> True, 
        ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {154., 160.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.611014765551023*^9, {3.611015438245179*^9, 3.611015478629487*^9}, {
   3.611015571084509*^9, 3.611015592838628*^9}, 3.611016074174272*^9, {
   3.611016105527326*^9, 3.611016120247878*^9}, 3.611016540620009*^9, {
   3.611016633366872*^9, 3.6110166790838413`*^9}, 3.611018204279158*^9, 
   3.611018497569044*^9, 3.611019565023622*^9, 3.6110202255413227`*^9, 
   3.611020771339778*^9, 3.611020826586112*^9, 3.611021076571205*^9, {
   3.6110211272668543`*^9, 3.611021193848506*^9}, {3.611021537195156*^9, 
   3.611021562867106*^9}, {3.611021653031872*^9, 3.6110216828503027`*^9}, {
   3.611021744929946*^9, 3.611021799586536*^9}, {3.611021880396413*^9, 
   3.61102189751781*^9}, 3.611021928485592*^9, {3.611022062462628*^9, 
   3.6110220792865887`*^9}, {3.611022189792754*^9, 3.6110222457052298`*^9}, {
   3.61102247182486*^9, 3.6110225005022087`*^9}, 3.611022771182941*^9, 
   3.611024524401619*^9, {3.611024618253963*^9, 3.611024654354446*^9}, 
   3.6110589945841084`*^9, 3.611059051167152*^9, 3.611059107414981*^9, {
   3.6110591837773314`*^9, 3.611059207468968*^9}, {3.611059613621935*^9, 
   3.611059640942287*^9}, 3.6110596750178432`*^9, 3.6110601166339197`*^9, 
   3.611060432498274*^9, 3.611060636601492*^9, {3.611060673869513*^9, 
   3.611060694785328*^9}, {3.611060752537335*^9, 3.6110607626695337`*^9}, 
   3.6110608142869453`*^9, 3.611060854798892*^9, {3.611060910798773*^9, 
   3.611060920007979*^9}, {3.611060967460191*^9, 3.6110610083409157`*^9}, 
   3.611061125751172*^9, {3.611061265817532*^9, 3.611061288359632*^9}, 
   3.611061399545835*^9, 3.611061865036634*^9, 3.611061908915948*^9, 
   3.611061959222206*^9, 3.6110624907486773`*^9, 3.6110665070694313`*^9, 
   3.6110666845153017`*^9, 3.6110669529411383`*^9, 3.6110671489757137`*^9, 
   3.611067438369486*^9, 3.611068033844942*^9, 3.611069822051135*^9, 
   3.611091736250443*^9, 3.611091840649156*^9, 3.611092121855218*^9, 
   3.611092162534218*^9, {3.6110922281945047`*^9, 3.611092253843453*^9}, {
   3.6110922884036827`*^9, 3.611092314288354*^9}, 3.611092379981429*^9, 
   3.61109250750589*^9, 3.6110926651964273`*^9, {3.611148485153399*^9, 
   3.6111485066105337`*^9}, {3.611148541184431*^9, 3.6111485753029413`*^9}, 
   3.611148642824183*^9, 3.611148708417248*^9, {3.611149282390286*^9, 
   3.611149293625431*^9}, {3.611150060159731*^9, 3.611150086603592*^9}, 
   3.6111511808702602`*^9, 3.6112560057278433`*^9, {3.611256551512445*^9, 
   3.611256572907188*^9}, 3.611256842807921*^9, 3.6112592802355328`*^9, 
   3.611259560297493*^9, 3.6112600880361423`*^9, 3.611260161380641*^9, 
   3.6112605875104227`*^9, 3.6112618185074387`*^9, {3.6112618937730293`*^9, 
   3.611261916060094*^9}, 3.611261973423416*^9, 3.61126642809019*^9, 
   3.6112667117422857`*^9, {3.6112669196317596`*^9, 3.611266926934423*^9}, 
   3.6112672838450823`*^9, 3.611267320388331*^9, 3.611349149369729*^9, 
   3.611350258505961*^9, 3.611350583877255*^9, 3.611351537283826*^9, 
   3.611354921826334*^9, 3.6113549711176767`*^9, 3.611355100201899*^9, 
   3.611356657148425*^9, 3.611357244621811*^9, 3.611363587559417*^9, 
   3.6113637615306673`*^9, 3.6113639471112757`*^9, 3.6113645474938383`*^9, 
   3.611365159979381*^9, 3.611365936281225*^9, 3.611367113519683*^9, 
   3.611368078192356*^9, {3.611369705608477*^9, 3.61136973086753*^9}, {
   3.611520861253996*^9, 3.61152093710364*^9}, 3.611591790256954*^9, 
   3.611601581806136*^9, {3.626391750447094*^9, 3.6263917589051657`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export the movie code (but frame rate is really bad)", "Subsection",
 CellChangeTimes->{{3.611175296639963*^9, 3.611175316678351*^9}, {
  3.611350289417975*^9, 3.611350290049738*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<rocket.mov\>\"", ",", "rocketmovie"}], "]"}]], "Input",
 CellChangeTimes->{{3.611151222935959*^9, 3.611151231130311*^9}, {
  3.6111752879367743`*^9, 3.611175290174844*^9}, {3.611268237224132*^9, 
  3.611268239038601*^9}}],

Cell[BoxData["\<\"rocket.mov\"\>"], "Output",
 CellChangeTimes->{3.611268256993277*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{775, 709},
WindowMargins->{{-1680, Automatic}, {Automatic, -285}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 175, 2, 64, "Section"],
Cell[757, 26, 1111, 21, 258, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1905, 52, 104, 1, 64, "Section"],
Cell[2012, 55, 187, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[2224, 63, 59328, 1541, 4251, "Input"],
Cell[CellGroupData[{
Cell[61577, 1608, 1829, 29, 21, "Print"],
Cell[63409, 1639, 2010, 33, 22, "Print"],
Cell[65422, 1674, 1690, 24, 22, "Print"],
Cell[67115, 1700, 1918, 30, 21, "Print"],
Cell[69036, 1732, 1920, 30, 21, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71017, 1769, 98, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[71140, 1774, 25820, 669, 1610, "Input"],
Cell[96963, 2445, 25405, 424, 197, "Output"],
Cell[122371, 2871, 32900, 545, 197, "Output"],
Cell[155274, 3418, 33441, 550, 73, "Output"],
Cell[188718, 3970, 34135, 561, 200, "Output"],
Cell[222856, 4533, 76963, 1266, 222, "Output"],
Cell[299822, 5801, 6077, 100, 365, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305936, 5906, 189, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[306150, 5912, 275, 5, 28, "Input"],
Cell[306428, 5919, 87, 1, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
